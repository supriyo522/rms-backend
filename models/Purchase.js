// const mongoose = require('mongoose');

// const purchaseSchema = new mongoose.Schema({
//   billDate: { type: Date, required: false },
//   store: { type: String, required: false },
//   terminalNo: { type: String, required: false },
//   division: { type: String, required: false },
//   section: { type: String, required: false },
//   department: { type: String, required: false },
//   itemCode: { type: String, required: false },
//   cat1: { type: String, required: false },
//   cat2: { type: Number, required: false },
//   cat3: { type: String, required: false },
//   cat4: { type: Number, required: false },
//   cat5: { type: String, required: false },
//   isVoid: { type: String, required: false },
//   barcode: { type: String, required: false },
//   vendor: { type: String, required: false },
//   ageing: { type: String, required: false },
//   taxDescription: { type: String, required: false },
//   taxRate: { type: Number, required: false },
//   taxableSale: { type: Number, required: false },
//   description: { type: String, required: false },
//   mrp: { type: Number, required: false },
//   rsp: { type: Number, required: false },
//   promoType: { type: String, required: false },
//   promoName: { type: String, required: false },
//   stdRate: { type: Number, required: false },
//   billQty: { type: Number, required: false },
//   grAmt: { type: Number, required: false },
//   promoAmt: { type: Number, required: false },
//   discountAmt: { type: Number, required: false },
//   discAmt: { type: Number, required: false },
//   netAmt: { type: Number, required: false },
//   salesManName: { type: String, required: false },
//   sellQuantity: { type: Number, required: false },
//   finalScore: { type: Number, required: false },
//   firstName: { type: String, required: false },
//   lastName: { type: String, required: false },
//   gender: { type: String, required: false },
//   country: { type: String, required: false },
//   age: { type: Number, required: false },
//   date: { type: String, required: false },
//   id: { type: Number, required: false }
// });

// module.exports = mongoose.model('Purchase', purchaseSchema);


const mongoose = require('mongoose');

const purchaseSchema = new mongoose.Schema({
  billDate: { type: Date, required: false },
  store: { type: String, required: false },
  terminalNo: { type: String, required: false },
  division: { type: String, required: false },
  section: { type: String, required: false },
  department: { type: String, required: false },
  itemCode: { type: String, required: false },
  cat1: { type: String, required: false },
  cat2: { type: Number, required: false },
  cat3: { type: String, required: false },
  cat4: { type: Number, required: false },
  cat5: { type: String, required: false },
  isVoid: { type: String, required: false },
  barcode: { type: String, required: false },
  vendor: { type: String, required: false },
  ageing: { type: String, required: false },
  taxDescription: { type: String, required: false },
  taxRate: { type: Number, required: false },
  taxableSale: { type: Number, required: false },
  description: { type: String, required: false },
  mrp: { type: Number, required: false },
  rsp: { type: Number, required: false },
  promoType: { type: String, required: false },
  promoName: { type: String, required: false },
  stdRate: { type: Number, required: false },
  billQty: { type: Number, required: false },
  grAmt: { type: Number, required: false },
  promoAmt: { type: Number, required: false },
  discountAmt: { type: Number, required: false },
  discAmt: { type: Number, required: false },
  netAmt: { type: Number, required: false },
  salesManName: { type: String, required: false },
  sellQuantity: { type: Number, required: false },
  finalScore: { type: Number, required: false },
  firstName: { type: String, required: false },
  lastName: { type: String, required: false },
  gender: { type: String, required: false },
  country: { type: String, required: false },
  age: { type: Number, required: false },
  date: { type: String, required: false },
  id: { type: Number, required: false },
  closingQTY: { type: Number, required: false },
  closingAMT: { type: Number, required: false },

});

module.exports = mongoose.model('Purchase', purchaseSchema);


